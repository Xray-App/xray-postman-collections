{
	"info": {
		"_postman_id": "0afc852f-1671-4b42-b6cd-c32c93c028bf",
		"name": "Xray REST API v1.0",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "setup",
			"item": [
				{
					"name": "get project id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4e67e140-6d28-4754-a10f-85a481554407",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Project returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.collectionVariables.set(\"PROJECT_ID\", jsonData.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/project/{{PROJECT_KEY}}",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"project",
								"{{PROJECT_KEY}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get Xray custom fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "295c0646-7f9a-4ebc-9bc3-85b221067ee4",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"custom fields returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf.at.least(1);",
									"",
									"    for (var i = 0;i<jsonData.length;i++) {",
									"        var cf = jsonData[i];",
									"        // ((cf.name == \"Test Type\") || (cf.schema.custom == \"com.xpandit.plugins.xray:test-type-custom-field\")) ",
									"        if (cf.name == \"Test Type\") {",
									"            pm.collectionVariables.set(\"CF_Test_Type\", cf.id);",
									"        } else if (cf.name == \"Pre-Condition Type\") {",
									"            pm.collectionVariables.set(\"CF_Precondition_Type\", cf.id);",
									"        } else if (cf.name == \"Cucumber Scenario\") {",
									"            pm.collectionVariables.set(\"CF_Cucumber_Scenario\", cf.id);",
									"        } else if (cf.name == \"Cucumber Test Type\") {",
									"            pm.collectionVariables.set(\"CF_Cucumber_Test_Type\", cf.id);",
									"        } else if (cf.name == \"Manual Test Steps\") {",
									"            pm.collectionVariables.set(\"CF_Manual_Test_Steps\", cf.id);",
									"        } else if (cf.name == \"Generic Test Definition\") {",
									"            pm.collectionVariables.set(\"CF_Generic_Definition\", cf.id);",
									"        } else if (cf.name == \"Test Environments\") {",
									"            pm.collectionVariables.set(\"CF_Test_Environments\", cf.id);",
									"        } else if (cf.name == \"Test Repository Path\") {",
									"            pm.collectionVariables.set(\"CF_Test_Repository_Path\", cf.id);",
									"        }",
									"",
									"    }",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/field",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"field"
							]
						}
					},
					"response": []
				},
				{
					"name": "create user story S1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51c5a36d-3b67-452f-a026-6cce3d5a5aba",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Story created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.collectionVariables.set(\"S1_KEY\", jsonData.key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"fields\": {\n       \"project\":\n       {\n          \"key\": \"{{PROJECT_KEY}}\"\n       },\n       \"summary\": \"S1\",\n       \"description\": \"S1: example of a user storu\",\n       \"issuetype\": {\n          \"name\": \"{{STORY_ISSUETYPE_NAME}}\"\n       }\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/issue",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue"
							]
						}
					},
					"response": []
				},
				{
					"name": "create defect D1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ec714bf-175c-4af4-b4c1-1d4ee7159ea4",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Bug created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.collectionVariables.set(\"D1_KEY\", jsonData.key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"fields\": {\n       \"project\":\n       {\n          \"key\": \"{{PROJECT_KEY}}\"\n       },\n       \"summary\": \"D1\",\n       \"description\": \"D1: example of a udefect\",\n       \"issuetype\": {\n          \"name\": \"{{BUG_ISSUETYPE_NAME}}\"\n       }\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/issue",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue"
							]
						}
					},
					"response": []
				},
				{
					"name": "create folder \"Postman F1\" in Test Repository",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50868ba1-d9a7-4b94-9c57-2929613151a7",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Folder created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).not.eq(undefined);",
									"    pm.collectionVariables.set(\"F1_ID\", jsonData.id);",
									"    pm.collectionVariables.set(\"F1_PATH\", \"/\" + jsonData.name);",
									"    pm.collectionVariables.set(\"F1_NAME\", jsonData.name);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Postman F1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrepository/{{PROJECT_KEY}}/folders/-1",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testrepository",
								"{{PROJECT_KEY}}",
								"folders",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "create folder \"Postman F2\" in Test Repository",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3cd77fb-1ec0-4658-9fc0-56ee9617ee88",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Folder created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).not.eq(undefined);",
									"    pm.collectionVariables.set(\"F2_ID\", jsonData.id);",
									"    pm.collectionVariables.set(\"F2_PATH\", \"/\" + jsonData.name);",
									"    pm.collectionVariables.set(\"F2_NAME\", jsonData.name);",
									"});",
									"",
									"if (pm.collectionVariables.get(\"XRAY_VERSION_MAJOR\") == \"4\") {",
									"    postman.setNextRequest(\"create manual test T1 - Xray v4.x\")",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Postman F2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrepository/{{PROJECT_KEY}}/folders/-1",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testrepository",
								"{{PROJECT_KEY}}",
								"folders",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "create manual test T1 - Xray v3.x",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ada8c7be-e914-41c0-913b-79537dfc1c62",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Test created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.collectionVariables.set(\"T1_KEY\", jsonData.key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"fields\": {\n       \"project\":\n       {\n          \"key\": \"{{PROJECT_KEY}}\"\n       },\n       \"summary\": \"T1\",\n       \"description\": \"T1: example of manual test\",\n       \"issuetype\": {\n          \"name\": \"{{TEST_ISSUETYPE_NAME}}\"\n       },\n       \"{{CF_Test_Repository_Path}}\": \"{{F1_PATH}}\",\n       \"{{CF_Test_Type}}\": { \"value\": \"Manual\" },\n       \"{{CF_Manual_Test_Steps}}\": {\n            \"steps\": [\n                {\n                    \"index\": 0,\n                    \"step\": \"Step 1\",\n                    \"data\": \"input Data 1\",\n                    \"result\": \"Excepted result 1\"\n                },\n                {\n                    \"index\": 1,\n                    \"step\": \"Step 2\",\n                    \"data\": \"input Data 2\",\n                    \"result\": \"Excepted result 2\"                      \n                },\n                {\n                    \"index\": 2,\n                    \"step\": \"Step 3\",\n                    \"data\": \"input Data 3\",\n                    \"result\": \"Excepted result 3\"                      \n                },\n                {\n                    \"index\": 3,\n                    \"step\": \"Step 4\",\n                    \"data\": \"input Data 4\",\n                    \"result\": \"Excepted result 4\"                      \n                }\n            ]\n        }\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/issue",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue"
							]
						}
					},
					"response": []
				},
				{
					"name": "create manual test T4 - Xray v3.x",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d7ae50af-aaca-4994-9523-82396bcd657d",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Test created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.collectionVariables.set(\"T4_KEY\", jsonData.key);",
									"});",
									"",
									"postman.setNextRequest(\"create cucumber test T2\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"fields\": {\n       \"project\":\n       {\n          \"key\": \"{{PROJECT_KEY}}\"\n       },\n       \"summary\": \"T4\",\n       \"description\": \"T4: example of manual test\",\n       \"issuetype\": {\n          \"name\": \"{{TEST_ISSUETYPE_NAME}}\"\n       },\n       \"{{CF_Test_Repository_Path}}\": \"{{F1_PATH}}\",\n       \"{{CF_Test_Type}}\": { \"value\": \"Manual\" },\n       \"{{CF_Manual_Test_Steps}}\": {\n            \"steps\": [\n                {\n                    \"index\": 0,\n                    \"step\": \"Step 1\",\n                    \"data\": \"input Data 1\",\n                    \"result\": \"Excepted result 1\"\n                },\n                {\n                    \"index\": 1,\n                    \"step\": \"Step 2\",\n                    \"data\": \"input Data 2\",\n                    \"result\": \"Excepted result 2\"                      \n                },\n                {\n                    \"index\": 2,\n                    \"step\": \"Step 3\",\n                    \"data\": \"input Data 3\",\n                    \"result\": \"Excepted result 3\"                      \n                },\n                {\n                    \"index\": 3,\n                    \"step\": \"Step 4\",\n                    \"data\": \"input Data 4\",\n                    \"result\": \"Excepted result 4\"                      \n                }\n            ]\n        }\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/issue",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue"
							]
						}
					},
					"response": []
				},
				{
					"name": "create manual test T1 - Xray v4.x",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02618640-43da-46ea-89d7-9441b633f935",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Test created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.collectionVariables.set(\"T1_KEY\", jsonData.key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"fields\": {\n       \"project\":\n       {\n          \"key\": \"{{PROJECT_KEY}}\"\n       },\n       \"summary\": \"T1\",\n       \"description\": \"T1: example of manual test\",\n       \"issuetype\": {\n          \"name\": \"{{TEST_ISSUETYPE_NAME}}\"\n       },\n       \"{{CF_Test_Repository_Path}}\": \"{{F1_PATH}}\",\n       \"{{CF_Test_Type}}\": { \"value\": \"Manual\" },\n       \"{{CF_Manual_Test_Steps}}\": {\n            \"steps\": [\n\t\t\t\t{\n                    \"index\": 1,\n                    \"fields\": {\n                        \"Action\": \"Step 1\",\n                        \"Data\": \"input Data 1\",\n                        \"Expected Result\": \"Excepted result 1\"\n                    }\n                },\n                 {\n                    \"index\": 2,\n                    \"fields\": {\n                        \"Action\": \"Step 2\",\n                        \"Data\": \"input Data 2\",\n                        \"Expected Result\": \"Excepted result 2\"\n                    }\n                },\n                 {\n                    \"index\": 3,\n                    \"fields\": {\n                        \"Action\": \"Step 3\",\n                        \"Data\": \"input Data 3\",\n                        \"Expected Result\": \"Excepted result 3\"\n                    }\n                },\n                 {\n                    \"index\": 4,\n                    \"fields\": {\n                        \"Action\": \"Step 4\",\n                        \"Data\": \"input Data 4\",\n                        \"Expected Result\": \"Excepted result 4\"\n                    }\n                }\n            ]\n        }\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/issue",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue"
							]
						}
					},
					"response": []
				},
				{
					"name": "create manual test T4 - Xray v4.x",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cdabb393-30ab-4cca-8cdb-1c5f07563d3b",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Test created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.collectionVariables.set(\"T4_KEY\", jsonData.key);",
									"});",
									"",
									"postman.setNextRequest(\"create cucumber test T2\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"fields\": {\n       \"project\":\n       {\n          \"key\": \"{{PROJECT_KEY}}\"\n       },\n       \"summary\": \"T4\",\n       \"description\": \"T4: example of manual test\",\n       \"issuetype\": {\n          \"name\": \"{{TEST_ISSUETYPE_NAME}}\"\n       },\n       \"{{CF_Test_Repository_Path}}\": \"{{F1_PATH}}\",\n       \"{{CF_Test_Type}}\": { \"value\": \"Manual\" },\n       \"{{CF_Manual_Test_Steps}}\": {\n            \"steps\": [\n\t\t\t\t{\n                    \"index\": 1,\n                    \"fields\": {\n                        \"Action\": \"Step 1\",\n                        \"Data\": \"input Data 1\",\n                        \"Expected Result\": \"Excepted result 1\"\n                    }\n                },\n                 {\n                    \"index\": 2,\n                    \"fields\": {\n                        \"Action\": \"Step 2\",\n                        \"Data\": \"input Data 2\",\n                        \"Expected Result\": \"Excepted result 2\"\n                    }\n                },\n                 {\n                    \"index\": 3,\n                    \"fields\": {\n                        \"Action\": \"Step 3\",\n                        \"Data\": \"input Data 3\",\n                        \"Expected Result\": \"Excepted result 3\"\n                    }\n                },\n                 {\n                    \"index\": 4,\n                    \"fields\": {\n                        \"Action\": \"Step 4\",\n                        \"Data\": \"input Data 4\",\n                        \"Expected Result\": \"Excepted result 4\"\n                    }\n                }\n            ]\n        }\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/issue",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue"
							]
						}
					},
					"response": []
				},
				{
					"name": "create cucumber test T2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ace80a8-1c7b-4679-941a-f24b10251848",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Test created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.collectionVariables.set(\"T2_KEY\", jsonData.key);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"fields\": {\n       \"project\":\n       {\n          \"key\": \"{{PROJECT_KEY}}\"\n       },\n       \"summary\": \"Sum of two numbers\",\n       \"description\": \"example of cucumber automated test - Scenario Outline\",\n       \"issuetype\": {\n          \"name\": \"Test\"\n       },\n       \"{{CF_Test_Repository_Path}}\": \"{{F1_PATH}}\",\n       \"{{CF_Test_Type}}\": { \"value\": \"Cucumber\" },\n       \"{{CF_Cucumber_Test_Type}}\": { \"value\": \"Scenario Outline\" },\n       \"{{CF_Cucumber_Scenario}}\": \"Given I have entered <input_1> into the calculator\\nAnd I have entered <input_2> into the calculator\\nWhen I press <button>\\nThen the result should be <output> on the screen\\n\\n  Examples:\\n    | input_1 | input_2 | button | output |\\n    | 20      | 30      | add    | 50     |\\n    | 2       | 5       | add    | 7      |\" \n   \n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/issue",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue"
							]
						}
					},
					"response": []
				},
				{
					"name": "create generic test T3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1cfdb4f9-1933-4ba1-a409-24cc94ca1d9a",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Test created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.collectionVariables.set(\"T3_KEY\", jsonData.key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"fields\": {\n       \"project\":\n       {\n          \"key\": \"{{PROJECT_KEY}}\"\n       },\n       \"summary\": \"T3\",\n       \"description\": \"T3: example of generic test\",\n       \"issuetype\": {\n          \"name\": \"{{TEST_ISSUETYPE_NAME}}\"\n       },\n       \"{{CF_Test_Repository_Path}}\": \"{{F1_PATH}}\",\n       \"{{CF_Test_Type}}\": { \"value\": \"Generic\" },\n       \"{{CF_Generic_Definition}}\": \"sum_script.sh\"        \n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/issue",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue"
							]
						}
					},
					"response": []
				},
				{
					"name": "create manual precondition P1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "49d59fee-9c3d-4df8-9b98-11a1952f1bd5",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Precondition created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.collectionVariables.set(\"P1_KEY\", jsonData.key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"fields\": {\n       \"project\":\n       {\n          \"key\": \"{{PROJECT_KEY}}\"\n       },\n       \"summary\": \"P1\",\n       \"description\": \"P1: example of precondition\",\n       \"issuetype\": {\n          \"name\": \"{{PRECONDITION_ISSUETYPE_NAME}}\"\n       },\n       \"{{CF_Precondition_Type}}\": { \"value\": \"Manual\" }\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/issue",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue"
							]
						}
					},
					"response": []
				},
				{
					"name": "create test set TS1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5349688d-f989-4990-8d05-00321dbda242",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Test Set created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.collectionVariables.set(\"TS1_KEY\", jsonData.key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"fields\": {\n       \"project\":\n       {\n          \"key\": \"{{PROJECT_KEY}}\"\n       },\n       \"summary\": \"TS1\",\n       \"description\": \"TS1: example of test set\",\n       \"issuetype\": {\n          \"name\": \"{{TESTSET_ISSUETYPE_NAME}}\"\n       }     \n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/issue",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue"
							]
						}
					},
					"response": []
				},
				{
					"name": "create test plan TP1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5cb82c82-04d6-465f-9850-da6a3a3c36b6",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Test Plan created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.collectionVariables.set(\"TP1_KEY\", jsonData.key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"fields\": {\n       \"project\":\n       {\n          \"key\": \"{{PROJECT_KEY}}\"\n       },\n       \"summary\": \"TP1\",\n       \"description\": \"TP1: example of test plan\",\n       \"issuetype\": {\n          \"name\": \"{{TESTPLAN_ISSUETYPE_NAME}}\"\n       }     \n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/issue",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue"
							]
						}
					},
					"response": []
				},
				{
					"name": "create test execution TE1 with one run per each test",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "543b970a-97c1-4325-9120-18a3abaea7be",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test Execution created with 3 runs\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.testExecIssue.key).to.not.be.empty;",
									"    pm.collectionVariables.set(\"TE1_KEY\", jsonData.testExecIssue.key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"info\" : {\n        \"summary\" : \"Execution of automated tests for release\",\n        \"description\" : \"This execution is automatically created when importing execution results from an external source\"\n    },\n    \"tests\" : [\n        {\n            \"testKey\" : \"{{T1_KEY}}\",\n            \"start\" : \"2014-08-30T11:47:35+01:00\",\n            \"finish\" : \"2014-08-30T11:50:56+01:00\",\n            \"comment\" : \"Successful execution\",\n            \"status\" : \"PASS\",\n            \"evidences\" : [\n                {\n                    \"data\": \"ZHVtbXkgY29udGVudA==\",\n                    \"filename\": \"dummy.txt\",\n                    \"contentType\": \"text/plain\"\n                }\n            ],\n\t\t\t\"steps\": [\n                {\n                    \"status\": \"PASS\",\n                    \"comment\": \"Coment on Test Step Result 1\",\n                    \"evidences\" : [\n\t\t                {\n\t\t                    \"data\": \"ZHVtbXkgY29udGVudA==\",\n\t\t                    \"filename\": \"dummy.txt\",\n\t\t                    \"contentType\": \"text/plain\"\n\t\t                }\n\t\t            ]\n                },\n                {\n                    \"status\": \"PASS\",\n                    \"comment\": \"Coment on Test Step Result 2\"\n                },\n                {\n                    \"status\": \"PASS\",\n                    \"comment\": \"Coment on Test Step Result 3\"\n                },\n\t\t\t\t{\n                    \"status\": \"PASS\",\n                    \"comment\": \"Coment on Test Step Result 4\"\n                }\n        \t]\n        },\n        {\n            \"testKey\" : \"{{T2_KEY}}\",\n            \"start\" : \"2014-08-30T11:47:35+01:00\",\n            \"finish\" : \"2014-08-30T11:50:56+01:00\",\n            \"comment\" : \"Successful execution\",\n            \"status\" : \"PASS\"\n        },\n        {\n            \"testKey\" : \"{{T3_KEY}}\",\n            \"start\" : \"2014-08-30T11:47:35+01:00\",\n            \"finish\" : \"2014-08-30T11:50:56+01:00\",\n            \"comment\" : \"Successful execution\",\n            \"status\" : \"PASS\"\n        }\n ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/import/execution",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"import",
								"execution"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "tests",
			"item": [
				{
					"name": "export",
					"item": [
						{
							"name": "export tests",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4d9a9a17-e78e-4515-b517-9e886470f319",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Tests returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"3 Tests\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.lengthOf(3);",
											"    //pm.collectionVariables.set(\"T1_STEP1_ID\", jsonData[0].definition.steps[0].id)",
											"    // hack",
											"    if (jsonData[0].definition.steps != undefined){",
											"        pm.collectionVariables.set(\"T1_STEP1_ID\", jsonData[0].definition.steps[0].id)",
											"    }",
											"    if (jsonData[1].definition.steps != undefined){",
											"        pm.collectionVariables.set(\"T1_STEP1_ID\", jsonData[1].definition.steps[0].id)",
											"    }",
											"    if (jsonData[2].definition.steps != undefined){",
											"        pm.collectionVariables.set(\"T1_STEP1_ID\", jsonData[2].definition.steps[0].id)",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test?keys={{T1_KEY}};{{T2_KEY}};{{T3_KEY}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"test"
									],
									"query": [
										{
											"key": "keys",
											"value": "{{T1_KEY}};{{T2_KEY}};{{T3_KEY}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "export test runs",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2ad4a001-7e8f-464c-94e5-db2c1af88e0f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"1 Test Run returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    //pm.expect(jsonData).to.have.lengthOf(1);",
											"    pm.expect(jsonData.length).to.be.above(0);",
											"    pm.collectionVariables.set(\"TR2_ID\",jsonData[0].id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T2_KEY}}/testruns",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"test",
										"{{T2_KEY}}",
										"testruns"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "export test executions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ed5bdcb7-1b17-49ba-bb21-4a98da1ce95d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"1 Test Execution returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.lengthOf(1);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T2_KEY}}/testexecutions",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"test",
										"{{T2_KEY}}",
										"testexecutions"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "test steps",
					"item": [
						{
							"name": "get all test steps",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b4d6921b-4a6e-4a9b-be73-4b0951126293",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"4 steps returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.lengthOf(4);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T1_KEY}}/step",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"test",
										"{{T1_KEY}}",
										"step"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get a specific test step by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1bb775dc-d7a3-4be9-9a72-4befed4bc299",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"step details returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.eq(pm.collectionVariables.get(\"T1_STEP1_ID\"));",
											"    pm.expect(jsonData.index).to.eq(1);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T1_KEY}}/step/{{T1_STEP1_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"test",
										"{{T1_KEY}}",
										"step",
										"{{T1_STEP1_ID}}"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "add a step, with an attachment",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "54abe350-59cd-4bcd-be31-469fce1c69f5",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.collectionVariables.set(\"T1_NEWSTEP_ID\",jsonData.id);",
											"    pm.collectionVariables.set(\"T1_NEWSTEP_ATTACH1_ID\",jsonData.attachmentIds[0]);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"step\":\"example step5\",\n   \"data\":\"example data5\",\n   \"result\":\"example result5\",\n   \"attachments\":[\n\t\t{\n\t\t   \"data\":\"ZHVtbXkgY29udGVudA==\",\n\t\t   \"filename\":\"dummy.txt\",\n\t\t   \"contentType\":\"text/plain\"\n\t\t}\n   ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T1_KEY}}/step",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"test",
										"{{T1_KEY}}",
										"step"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "modify a step",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca038347-a7c8-47cb-95d0-b9066781958f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.id).to.eq(pm.collectionVariables.get(\"T1_NEWSTEP_ID\"));",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"step\":\"example step5x\",\n   \"data\":\"example data5x\",\n   \"result\":\"example result5x\",\n   \"attachments\": {\n\t   \t\"add\": [\n\t\t\t\t{\n\t\t\t\t   \"data\":\"ZHVtbXkgY29udGVudA==\",\n\t\t\t\t   \"filename\":\"dummy.txt\",\n\t\t\t\t   \"contentType\":\"text/plain\"\n\t\t\t\t}\n\t\t\t]\n   }\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T1_KEY}}/step/{{T1_NEWSTEP_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"test",
										"{{T1_KEY}}",
										"step",
										"{{T1_NEWSTEP_ID}}"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get all step attachments",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ad004ef2-94c4-406a-b609-6fb344f3d3f7",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"attachments returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.lengthOf.at.least(2);",
											"    pm.expect(jsonData[0].id).to.eq(pm.collectionVariables.get(\"T1_NEWSTEP_ATTACH1_ID\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T1_KEY}}/step/{{T1_NEWSTEP_ID}}/attachment",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"test",
										"{{T1_KEY}}",
										"step",
										"{{T1_NEWSTEP_ID}}",
										"attachment"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "delete a step attachment, by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af6aaee6-1913-4a58-947e-a7de7e8c0ca4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T1_KEY}}/step/{{T1_NEWSTEP_ID}}/attachment/{{T1_NEWSTEP_ATTACH1_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"test",
										"{{T1_KEY}}",
										"step",
										"{{T1_NEWSTEP_ID}}",
										"attachment",
										"{{T1_NEWSTEP_ATTACH1_ID}}"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "delete a step, by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "11619428-8627-4096-a901-b088b51f5050",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T1_KEY}}/step/{{T1_NEWSTEP_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"test",
										"{{T1_KEY}}",
										"step",
										"{{T1_NEWSTEP_ID}}"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "preconditions",
			"item": [
				{
					"name": "associate test to a precondition",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e2222a0c-f15f-4506-95b7-9db00eeb945d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"no data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"add\": [\n        \"{{T1_KEY}}\"\n        ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/precondition/{{P1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"precondition",
								"{{P1_KEY}}",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "export test' preconditions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb33ba82-abe9-4c8e-93f3-2c550d6d741e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"1 Precondition returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T1_KEY}}/preconditions",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"test",
								"{{T1_KEY}}",
								"preconditions"
							],
							"query": [
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get tests associated to precondition",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf07f4a0-5240-44c7-8ab2-5592245a34fc",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test Runs returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"1 Test Run returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/precondition/{{P1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"precondition",
								"{{P1_KEY}}",
								"test"
							],
							"query": [
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "disassociate test from a precondition",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5a5b2a0b-59ed-4606-9e16-ae55a1dcb93f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"no data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"remove\": [\n        \"{{T1_KEY}}\"\n        ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/precondition/{{P1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"precondition",
								"{{P1_KEY}}",
								"test"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "test sets",
			"item": [
				{
					"name": "associate test to a test set",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be6e2e24-b9ce-41a9-8fd9-c80c5e555c47",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"no data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"add\": [\n        \"{{T1_KEY}}\"\n        ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testset/{{TS1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testset",
								"{{TS1_KEY}}",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "get tests associated to test set",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be4f77c7-47ff-4b47-8249-10b9403a8b4c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test Runs returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"1 Test Run returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testset/{{TS1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testset",
								"{{TS1_KEY}}",
								"test"
							],
							"query": [
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "export test' test sets",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5cd0a91-8094-463b-87cc-6acd49addb32",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"1 Test Set returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T1_KEY}}/testsets",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"test",
								"{{T1_KEY}}",
								"testsets"
							],
							"query": [
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "disassociate test from a test set",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9e528b89-7559-4608-82e2-cfc0fe875f1a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"no data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"remove\": [\n        \"{{T1_KEY}}\"\n        ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testset/{{TS1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testset",
								"{{TS1_KEY}}",
								"test"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "test executions",
			"item": [
				{
					"name": "associate test to a test execution",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbe67112-31ac-4b3c-bc52-29e45856f759",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"no data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"add\": [\n        \"{{T4_KEY}}\"\n        ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testexec/{{TE1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testexec",
								"{{TE1_KEY}}",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "get tests associated to test execution",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "abd3f551-da6c-4d48-825e-7de1ac074399",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test Runs returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"1 Test Run returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf(4);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testexec/{{TE1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testexec",
								"{{TE1_KEY}}",
								"test"
							],
							"query": [
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "disassociate test from a test execution",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f6fc59aa-9ba7-474d-bc4a-c4ee6a1298ad",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"no data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"remove\": [\n        \"{{T4_KEY}}\"\n        ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testexec/{{TE1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testexec",
								"{{TE1_KEY}}",
								"test"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b0a4b23a-d859-491f-9143-9ee192746cce",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "465016e2-b74b-4904-aadf-9ecfea4fb977",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "test runs",
			"item": [
				{
					"name": "details",
					"item": [
						{
							"name": "get test run by test and test execution keys",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ee24e03-41cd-4e6b-8fe1-8be2136b2c84",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.testKey).to.eq(pm.collectionVariables.get(\"T3_KEY\"));",
											"    pm.expect(jsonData.testExecKey).to.eq(pm.collectionVariables.get(\"TE1_KEY\"));",
											"    pm.expect(jsonData.status).to.eq(\"PASS\");",
											"    pm.collectionVariables.set(\"TR3_ID\",jsonData.id);",
											"",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun?testExecIssueKey={{TE1_KEY}}&testIssueKey={{T3_KEY}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun"
									],
									"query": [
										{
											"key": "testExecIssueKey",
											"value": "{{TE1_KEY}}"
										},
										{
											"key": "testIssueKey",
											"value": "{{T3_KEY}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get test run for T1 by test and test execution keys",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "033ef52b-abfe-40f9-97e1-ed5c30f9b305",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.testKey).to.eq(pm.collectionVariables.get(\"T1_KEY\"));",
											"    pm.expect(jsonData.testExecKey).to.eq(pm.collectionVariables.get(\"TE1_KEY\"));",
											"    pm.expect(jsonData.status).to.eq(\"PASS\");",
											"    pm.collectionVariables.set(\"TR1_ID\",jsonData.id);",
											"",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun?testExecIssueKey={{TE1_KEY}}&testIssueKey={{T1_KEY}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun"
									],
									"query": [
										{
											"key": "testExecIssueKey",
											"value": "{{TE1_KEY}}"
										},
										{
											"key": "testIssueKey",
											"value": "{{T1_KEY}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get test run by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "81df0a6d-9129-4f99-b31a-d807e442d0ae",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.testKey).to.eq(pm.collectionVariables.get(\"T3_KEY\"));",
											"    pm.expect(jsonData.testExecKey).to.eq(pm.collectionVariables.get(\"TE1_KEY\"));",
											"    pm.expect(jsonData.status).to.eq(\"PASS\");",
											"    pm.collectionVariables.set(\"TR3_ID\",jsonData.id);",
											"",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR3_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR3_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update test run by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cc2afc99-bb86-4d89-8f73-9942f4776380",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"ABORTED\",\n    \"comment\": \"ABORTED execution\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR3_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR3_ID}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "status",
					"item": [
						{
							"name": "get test run status by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c75f0cbf-1e40-45d7-9631-3bb781422c13",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"status returned\", function () {",
											"    var response = pm.response.text();",
											"    pm.expect(pm.response.text()).to.eq(\"ABORTED\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR3_ID}}/status",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR3_ID}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "set test run status by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89328299-4f22-47aa-9e12-de24ebdf00ea",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR3_ID}}/status?status=FAIL",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR3_ID}}",
										"status"
									],
									"query": [
										{
											"key": "status",
											"value": "FAIL"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "defects",
					"item": [
						{
							"name": "add/link defects to test run",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d786c162-08af-4822-9cde-f633f684ee20",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n\t\"{{D1_KEY}}\"\n]",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/defect",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR1_ID}}",
										"defect"
									]
								}
							},
							"response": []
						},
						{
							"name": "get test run defects",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e0b12ecf-1d9a-4e65-8912-705bde9370af",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.length).to.be.above(0);",
											"    pm.expect(jsonData[0].key).to.eq(pm.collectionVariables.get(\"D1_KEY\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"data\":\"ZHVtbXkgY29udGVudA==\",\n   \"filename\":\"dummy.txt\",\n   \"contentType\":\"text/plain\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/defect",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR1_ID}}",
										"defect"
									]
								}
							},
							"response": []
						},
						{
							"name": "remove/unlink defects from test run",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "53c9fa96-768c-473c-9b00-be50e7490684",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"data\":\"ZHVtbXkgY29udGVudA==\",\n   \"filename\":\"dummy.txt\",\n   \"contentType\":\"text/plain\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/defect/{{D1_KEY}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR1_ID}}",
										"defect",
										"{{D1_KEY}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "evidence",
					"item": [
						{
							"name": "add evidence/attachment(s) to the test run",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e53cb80-fb10-4ff6-b191-36add9aeafc8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"data\":\"ZHVtbXkgY29udGVudA==\",\n   \"filename\":\"dummy.txt\",\n   \"contentType\":\"text/plain\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/attachment",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR1_ID}}",
										"attachment"
									]
								}
							},
							"response": []
						},
						{
							"name": "get all evidence/attachment(s) linked to the test run",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "57305743-7d2c-4798-b481-d87515b0910b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"attachment returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.length).to.be.above(0);",
											"    pm.collectionVariables.set(\"TR1_ATTACH1_ID\",jsonData[0].id);",
											"    pm.collectionVariables.set(\"TR1_ATTACH1_NAME\",jsonData[0].fileName);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"data\":\"ZHVtbXkgY29udGVudA==\",\n   \"filename\":\"dummy.txt\",\n   \"contentType\":\"text/plain\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/attachment",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR1_ID}}",
										"attachment"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete evidence/attachment by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1cd965ef-5bcf-4f64-924d-7a0a75d5ee91",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"data\":\"ZHVtbXkgY29udGVudA==\",\n   \"filename\":\"dummy.txt\",\n   \"contentType\":\"text/plain\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/attachment/{{TR1_ATTACH1_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR1_ID}}",
										"attachment",
										"{{TR1_ATTACH1_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete evidence/attachment by name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "502256a5-eacf-4c13-a488-3a860d1864ef",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "dummy.txt",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/attachment",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR1_ID}}",
										"attachment"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "63bbbb9e-1aab-40db-b086-3a58c9652260",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0a528be0-477f-44fa-acfb-6260016d79ec",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "comment",
					"item": [
						{
							"name": "get test run comment by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "331a055c-3068-4398-829f-558e7dda7612",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"status returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.raw).to.eq(\"ABORTED execution\");",
											"    pm.expect(jsonData.rendered).to.eq(\"<p>ABORTED execution</p>\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR3_ID}}/comment",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR3_ID}}",
										"comment"
									]
								}
							},
							"response": []
						},
						{
							"name": "set test run comment by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d052327e-da0f-483b-9526-67859cd88b80",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"status returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.raw).to.eq(\"My new comment\");",
											"    pm.expect(jsonData.rendered).to.eq(\"<p>My new comment</p>\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "My new comment",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR3_ID}}/comment",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR3_ID}}",
										"comment"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "assignee",
					"item": [
						{
							"name": "get test run assignee by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3753fdbd-6243-45c6-bfda-c5c043b1c9b7",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"status returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.assigned).to.eq(true);",
											"    pm.expect(jsonData.assignee).to.eq(pm.environment.get(\"JIRA_USERNAME\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR3_ID}}/assignee",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR3_ID}}",
										"assignee"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "test step results",
					"item": [
						{
							"name": "overall",
							"item": [
								{
									"name": "get all test run' steps",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dc4ca232-a5a6-4899-aa5c-81208b949af1",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"data returned\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData).to.not.be.empty;",
													"});",
													"",
													"pm.test(\"4 steps returned\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData).to.have.lengthOf(4);",
													"    pm.collectionVariables.set(\"TR1_STEP1_ID\",jsonData[0].id);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/step",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"api",
												"testrun",
												"{{TR1_ID}}",
												"step"
											],
											"query": [
												{
													"key": null,
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "rever api endppoint doc"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "details",
							"item": [
								{
									"name": "get test run' step details by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "06c6a229-e8ee-46a3-a8be-218e4b1b43c0",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"data returned\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData).to.not.be.empty;",
													"});",
													"",
													"pm.test(\"4 steps returned\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData).to.not.be.empty;",
													"    pm.expect(jsonData.id).to.eq(pm.collectionVariables.get(\"TR1_STEP1_ID\"));",
													"    pm.expect(jsonData.step.raw).to.eq(\"Step 1\");",
													"    pm.expect(jsonData.result.raw).to.eq(\"Excepted result 1\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/step/{{TR1_STEP1_ID}}",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"api",
												"testrun",
												"{{TR1_ID}}",
												"step",
												"{{TR1_STEP1_ID}}"
											],
											"query": [
												{
													"key": null,
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "rever api endppoint doc"
									},
									"response": []
								},
								{
									"name": "set test run' step details by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83aa569f-c16f-4673-87b5-0d782e3b4fda",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"id\":\"{{TR1_STEP1_ID}}\",\n   \"status\":\"PASS\",\n   \"comment\":\"The comment\",\n   \"evidences\":[\n      {\n\t   \"data\":\"ZHVtbXkgY29udGVudA==\",\n\t   \"filename\":\"dummy.txt\",\n\t   \"contentType\":\"text/plain\"\n      }\n   ],\n   \"actualResult\":\"The actual result\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/step/{{TR1_STEP1_ID}}",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"api",
												"testrun",
												"{{TR1_ID}}",
												"step",
												"{{TR1_STEP1_ID}}"
											],
											"query": [
												{
													"key": null,
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "rever api endppoint doc"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "status",
							"item": [
								{
									"name": "get test run' step status by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ef469b5a-bd56-4dde-8be1-f4113d861a08",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"status returned\", function () {",
													"    var response = pm.response.text();",
													"    pm.expect(pm.response.text()).to.eq(\"PASS\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/step/{{TR1_STEP1_ID}}/status",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"api",
												"testrun",
												"{{TR1_ID}}",
												"step",
												"{{TR1_STEP1_ID}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "set test run' step status by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9e3d0d3b-48f7-4bb6-8248-dc09008a0433",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/step/{{TR1_STEP1_ID}}/status?status=FAIL",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"api",
												"testrun",
												"{{TR1_ID}}",
												"step",
												"{{TR1_STEP1_ID}}",
												"status"
											],
											"query": [
												{
													"key": "status",
													"value": "FAIL"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "evidence",
							"item": [
								{
									"name": "add evidence/attachment(s) to the test run step",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "26c4cd17-cfb5-41ee-964d-eac9ab476d09",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"data\":\"ZHVtbXkgY29udGVudA==\",\n   \"filename\":\"dummy.txt\",\n   \"contentType\":\"text/plain\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/step/{{TR1_STEP1_ID}}/attachment",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"api",
												"testrun",
												"{{TR1_ID}}",
												"step",
												"{{TR1_STEP1_ID}}",
												"attachment"
											]
										}
									},
									"response": []
								},
								{
									"name": "get all evidence/attachment(s) linked to the test run step",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "26238726-ef92-4f0f-aea8-9614a48251cd",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"data returned\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData).to.not.be.empty;",
													"    pm.expect(jsonData.length).to.be.above(0);",
													"    pm.collectionVariables.set(\"TR1_STEP1_ATTACH1_ID\",jsonData[0].id);",
													"    pm.collectionVariables.set(\"TR1_STEP1_ATTACH1_NAME\",jsonData[0].fileName);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/step/{{TR1_STEP1_ID}}/attachment",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"api",
												"testrun",
												"{{TR1_ID}}",
												"step",
												"{{TR1_STEP1_ID}}",
												"attachment"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete evidence/attachment in test run step by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "81f6a589-53d3-40c3-b7fd-ef38e2a13d78",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/step/{{TR1_STEP1_ID}}/attachment/{{TR1_STEP1_ATTACH1_ID}}",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"api",
												"testrun",
												"{{TR1_ID}}",
												"step",
												"{{TR1_STEP1_ID}}",
												"attachment",
												"{{TR1_STEP1_ATTACH1_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete evidence/attachment in test run step by name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "efca0a45-4196-474a-9865-a6b51d89cdb7",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "dummy.txt",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/step/{{TR1_STEP1_ID}}/attachment",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"api",
												"testrun",
												"{{TR1_ID}}",
												"step",
												"{{TR1_STEP1_ID}}",
												"attachment"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1380081e-f921-41e9-a486-24f35c229706",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1c3b0f3b-c8fb-4654-be87-492982d25952",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "cucumber/gherkin scenario outline examples",
					"item": [
						{
							"name": "get outline example details, by index",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fe4b7b3c-60c7-4da0-bafd-6b8b9cb8b7c2",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"example returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.rank).to.eq(1)",
											"    pm.expect(jsonData.status).to.eq(\"TODO\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR2_ID}}/example/0",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR2_ID}}",
										"example",
										"0"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "rever api endppoint doc"
							},
							"response": []
						},
						{
							"name": "update outline example details, by index",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af2c3d53-6a69-4ff9-bcee-36ff50e93132",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR2_ID}}/example/0?status=PASS",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR2_ID}}",
										"example",
										"0"
									],
									"query": [
										{
											"key": "status",
											"value": "PASS"
										}
									]
								},
								"description": "rever api endppoint doc"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "test plans",
			"item": [
				{
					"name": "associate test to a test plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c0037cff-46e1-4b4e-9776-da4d3d767315",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"no data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"add\": [\n        \"{{T1_KEY}}\"\n        ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testplan/{{TP1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testplan",
								"{{TP1_KEY}}",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "get tests associated to test plan, along with their consolidated status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6df934b5-84ed-47ec-8750-9eb46ef8112c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"tests returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testplan/{{TP1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testplan",
								"{{TP1_KEY}}",
								"test"
							],
							"query": [
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "export test' test plans",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "26085847-5a45-43c1-ab41-0ad8e68eea30",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"1 Test Plan returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T1_KEY}}/testplans",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"test",
								"{{T1_KEY}}",
								"testplans"
							],
							"query": [
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "disassociate test from a test plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "80ca22c0-7d16-40b6-9828-8dbff58cefb7",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"no data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"remove\": [\n        \"{{T1_KEY}}\"\n        ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testplan/{{TP1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testplan",
								"{{TP1_KEY}}",
								"test"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "test repository",
			"item": [
				{
					"name": "hierarchy",
					"item": [
						{
							"name": "get all test repository's folder hierarchy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "46837f62-2fb1-4bc0-a337-e66158817925",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.folders).to.not.be.empty;",
											"    pm.expect(jsonData.allTestsCount).to.be.above(0);",
											"    pm.expect(jsonData.allOrphanTestsCount).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrepository/{{PROJECT_KEY}}/folders",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrepository",
										"{{PROJECT_KEY}}",
										"folders"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "folders",
					"item": [
						{
							"name": "get details of a test repository's folder by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88c979db-2672-4935-bbdc-a7982b6b8247",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.name).to.eq(pm.collectionVariables.get(\"F1_NAME\"));",
											"    pm.expect(jsonData.id).to.eq(pm.collectionVariables.get(\"F1_ID\"));",
											"    pm.expect(jsonData.testCount).to.be.above(0);",
											"    pm.expect(jsonData.totalTestCount).to.be.above(0);",
											"    pm.expect(jsonData.testRepositoryPath).to.eq(\"\");",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrepository/{{PROJECT_KEY}}/folders/{{F1_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrepository",
										"{{PROJECT_KEY}}",
										"folders",
										"{{F1_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create folder in Test Repository",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "47e6b7c5-a66f-4675-8b70-2502ad253619",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Folder created\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).not.eq(undefined);",
											"    pm.collectionVariables.set(\"F3_ID\", jsonData.id);",
											"    pm.collectionVariables.set(\"F3_PATH\", \"/\" + jsonData.name);",
											"    pm.collectionVariables.set(\"F3_NAME\", jsonData.name);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Postman 3\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrepository/{{PROJECT_KEY}}/folders/{{F1_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrepository",
										"{{PROJECT_KEY}}",
										"folders",
										"{{F1_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update test repository's folder details by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86009770-bb0e-4e43-8dd2-546e400c2a53",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Postman X\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrepository/{{PROJECT_KEY}}/folders/{{F3_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrepository",
										"{{PROJECT_KEY}}",
										"folders",
										"{{F3_ID}}"
									]
								},
								"description": "Notes:\n- the docs mention HTTP status code 204 in success but it returns 200\n-  depends on previous"
							},
							"response": []
						},
						{
							"name": "delete a test repository's folder by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2851e05a-47ae-4e89-8303-fb0a37aea352",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Postman X\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrepository/{{PROJECT_KEY}}/folders/{{F3_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrepository",
										"{{PROJECT_KEY}}",
										"folders",
										"{{F3_ID}}"
									]
								},
								"description": "Notes:\n- the docs mention HTTP status code 204 in success but it returns 200\n-  depends on previous"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "tests",
					"item": [
						{
							"name": "get tests within a specific folder in the test repository",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9b14866-7527-4262-bee8-b1417db01477",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.tests).to.not.be.empty;",
											"    pm.expect(jsonData.total).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrepository/{{PROJECT_KEY}}/folders/{{F1_ID}}/tests",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrepository",
										"{{PROJECT_KEY}}",
										"folders",
										"{{F1_ID}}",
										"tests"
									]
								}
							},
							"response": []
						},
						{
							"name": "add tests to a specific folder in the test repository",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "45c6a2b7-1c6a-420f-b986-7fabe98f7c3a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n \"add\": [\n    \"{{T4_KEY}}\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrepository/{{PROJECT_KEY}}/folders/{{F2_ID}}/tests",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrepository",
										"{{PROJECT_KEY}}",
										"folders",
										"{{F2_ID}}",
										"tests"
									]
								},
								"description": "Notes:\n- the docs mention HTTP status code 204 in success but it returns 200\n- not depends on previous"
							},
							"response": []
						},
						{
							"name": "remove tests from a specific folder in the test repository",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd0f59a5-d1b2-404f-aa97-3619351a7c81",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n \"remove\": [\n    \"{{T4_KEY}}\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrepository/{{PROJECT_KEY}}/folders/{{F2_ID}}/tests",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrepository",
										"{{PROJECT_KEY}}",
										"folders",
										"{{F2_ID}}",
										"tests"
									]
								},
								"description": "Notes:\n- the docs mention HTTP status code 204 in success but it returns 200\n- not depends on previous"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "execution results",
			"item": [
				{
					"name": "import",
					"item": [
						{
							"name": "Xray JSON",
							"item": [
								{
									"name": "Xray JSON - standard",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0878d73b-7444-4764-9353-44211e183f85",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Test Execution created\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.testExecIssue.key).to.not.be.empty;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"info\" : {\n        \"summary\" : \"Execution of automated tests for release\",\n        \"description\" : \"This execution is automatically created when importing execution results from an external source\",\n        \"startDate\" : \"2020-05-30T11:37:00+01:00\",\n        \"finishDate\" : \"2020-05-30T11:50:00+01:00\"\n    },\n    \"tests\" : [\n        {\n            \"testKey\" : \"{{T1_KEY}}\",\n            \"start\" : \"2020-05-30T11:47:35+01:00\",\n            \"finish\" : \"2020-05-30T11:49:35+01:00\",\n            \"comment\" : \"Successful execution1\",\n            \"status\" : \"PASS\"\n        },\n        {\n            \"testKey\" : \"{{T2_KEY}}\",\n            \"start\" : \"2020-05-30T11:37:35+01:00\",\n            \"finish\" : \"2020-05-30T11:39:35+01:00\",\n            \"comment\" : \"Successful execution2\",\n            \"status\" : \"PASS\"\n        },\n        {\n            \"testKey\" : \"{{T3_KEY}}\",\n            \"start\" : \"2020-05-30T11:44:35+01:00\",\n            \"finish\" : \"2020-05-30T11:45:35+01:00\",\n            \"comment\" : \"Successful execution3\",\n            \"status\" : \"PASS\"\n        }\n ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/import/execution",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"import",
												"execution"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Cucumber",
							"item": [
								{
									"name": "Cucumber - standard",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "39001094-d48f-41be-bb1c-0fd8097603f1",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Test Execution created\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.testExecIssue.key).to.not.be.empty;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[{\n    \"id\": \"as-a-user,-i-can-sum-two-numbers\",\n    \"uri\": \"features/sample_scenario_outline.feature\",\n    \"keyword\": \"Feature\",\n    \"name\": \"As a user, I can sum two numbers\",\n    \"description\": \"\",\n    \"line\": 2,\n    \"tags\": [{\n        \"name\": \"@REQ_{{S1_KEY}}\",\n        \"line\": 1\n    }],\n    \"elements\": [{\n        \"id\": \"as-a-user,-i-can-sum-two-numbers;;;2\",\n        \"keyword\": \"Scenario Outline\",\n        \"name\": \"\",\n        \"description\": \"\",\n        \"line\": 13,\n        \"type\": \"scenario\",\n        \"tags\": [{\n            \"name\": \"@REQ_{{S1_KEY}}\",\n            \"line\": 1\n        }, {\n            \"name\": \"@TEST_{{T2_KEY}}\",\n            \"line\": 4\n        }],\n        \"before\": [{\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:9\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 21000\n            }\n        }],\n        \"steps\": [{\n            \"keyword\": \"Given \",\n            \"name\": \"I have entered 20 into the calculator\",\n            \"line\": 6,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:39\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 45000\n            }\n        }, {\n            \"keyword\": \"And \",\n            \"name\": \"I have entered 30 into the calculator\",\n            \"line\": 7,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:39\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 11000\n            }\n        }, {\n            \"keyword\": \"When \",\n            \"name\": \"I press add\",\n            \"line\": 8,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:43\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 17000\n            }\n        }, {\n            \"keyword\": \"Then \",\n            \"name\": \"the result should be 50 on the screen\",\n            \"line\": 9,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:51\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 764000\n            }\n        }],\n        \"after\": [{\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:13\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 8000\n            }\n        }]\n    }, {\n        \"id\": \"as-a-user,-i-can-sum-two-numbers;;;3\",\n        \"keyword\": \"Scenario Outline\",\n        \"name\": \"\",\n        \"description\": \"\",\n        \"line\": 14,\n        \"type\": \"scenario\",\n        \"tags\": [{\n            \"name\": \"@REQ_{{S1_KEY}}\",\n            \"line\": 1\n        }, {\n            \"name\": \"@@TEST_{{T2_KEY}}\",\n            \"line\": 4\n        }],\n        \"before\": [{\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:9\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 8000\n            }\n        }],\n        \"steps\": [{\n            \"keyword\": \"Given \",\n            \"name\": \"I have entered 2 into the calculator\",\n            \"line\": 6,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:39\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 14000\n            }\n        }, {\n            \"keyword\": \"And \",\n            \"name\": \"I have entered 5 into the calculator\",\n            \"line\": 7,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:39\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 9000\n            }\n        }, {\n            \"keyword\": \"When \",\n            \"name\": \"I press add\",\n            \"line\": 8,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:43\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 11000\n            }\n        }, {\n            \"keyword\": \"Then \",\n            \"name\": \"the result should be 7 on the screen\",\n            \"line\": 9,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:51\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 19000\n            }\n        }],\n        \"after\": [{\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:13\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 6000\n            }\n        }]\n    }, {\n        \"id\": \"as-a-user,-i-can-sum-two-numbers;;;4\",\n        \"keyword\": \"Scenario Outline\",\n        \"name\": \"\",\n        \"description\": \"\",\n        \"line\": 15,\n        \"type\": \"scenario\",\n        \"tags\": [{\n            \"name\": \"@REQ_{{S1_KEY}}\",\n            \"line\": 1\n        }, {\n            \"name\": \"@TEST_{{T2_KEY}}\",\n            \"line\": 4\n        }],\n        \"before\": [{\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:9\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 8000\n            }\n        }],\n        \"steps\": [{\n            \"keyword\": \"Given \",\n            \"name\": \"I have entered 0 into the calculator\",\n            \"line\": 6,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:39\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 14000\n            }\n        }, {\n            \"keyword\": \"And \",\n            \"name\": \"I have entered 40 into the calculator\",\n            \"line\": 7,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:39\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 9000\n            }\n        }, {\n            \"keyword\": \"When \",\n            \"name\": \"I press add\",\n            \"line\": 8,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:43\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 11000\n            }\n        }, {\n            \"keyword\": \"Then \",\n            \"name\": \"the result should be 40 on the screen\",\n            \"line\": 9,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:51\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 17000\n            }\n        }],\n        \"after\": [{\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:13\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 6000\n            }\n        }]\n    }, {\n        \"id\": \"as-a-user,-i-can-sum-two-numbers;;;5\",\n        \"keyword\": \"Scenario Outline\",\n        \"name\": \"\",\n        \"description\": \"\",\n        \"line\": 16,\n        \"type\": \"scenario\",\n        \"tags\": [{\n            \"name\": \"@REQ_{{S1_KEY}}\",\n            \"line\": 1\n        }, {\n            \"name\": \"@TEST_{{T2_KEY}}\",\n            \"line\": 4\n        }],\n        \"before\": [{\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:9\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 7000\n            }\n        }],\n        \"steps\": [{\n            \"keyword\": \"Given \",\n            \"name\": \"I have entered 4 into the calculator\",\n            \"line\": 6,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:39\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 14000\n            }\n        }, {\n            \"keyword\": \"And \",\n            \"name\": \"I have entered 50 into the calculator\",\n            \"line\": 7,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:39\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 9000\n            }\n        }, {\n            \"keyword\": \"When \",\n            \"name\": \"I press add\",\n            \"line\": 8,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:43\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 27000\n            }\n        }, {\n            \"keyword\": \"Then \",\n            \"name\": \"the result should be 54 on the screen\",\n            \"line\": 9,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:51\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 17000\n            }\n        }],\n        \"after\": [{\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:13\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 6000\n            }\n        }]\n    }, {\n        \"id\": \"as-a-user,-i-can-sum-two-numbers;;;6\",\n        \"keyword\": \"Scenario Outline\",\n        \"name\": \"\",\n        \"description\": \"\",\n        \"line\": 17,\n        \"type\": \"scenario\",\n        \"tags\": [{\n            \"name\": \"@REQ_{{S1_KEY}}\",\n            \"line\": 1\n        }, {\n            \"name\": \"@{{T1_KEY}}\",\n            \"line\": 4\n        }],\n        \"before\": [{\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:9\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 8000\n            }\n        }],\n        \"steps\": [{\n            \"keyword\": \"Given \",\n            \"name\": \"I have entered 5 into the calculator\",\n            \"line\": 6,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:39\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 14000\n            }\n        }, {\n            \"keyword\": \"And \",\n            \"name\": \"I have entered 50 into the calculator\",\n            \"line\": 7,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:39\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 9000\n            }\n        }, {\n            \"keyword\": \"When \",\n            \"name\": \"I press add\",\n            \"line\": 8,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:43\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 11000\n            }\n        }, {\n            \"keyword\": \"Then \",\n            \"name\": \"the result should be 55 on the screen\",\n            \"line\": 9,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:51\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 18000\n            }\n        }],\n        \"after\": [{\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:13\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 6000\n            }\n        }]\n    }]\n}]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/import/execution/cucumber?projectKey={{PROJECT_KEY}}",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"import",
												"execution",
												"cucumber"
											],
											"query": [
												{
													"key": "projectKey",
													"value": "{{PROJECT_KEY}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Behave",
							"item": [
								{
									"name": "Behave - standard",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f2fd6476-c0c7-4caa-837a-38431c285ad0",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Test Execution created\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.testExecIssue.key).to.not.be.empty;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[{\n        \"keyword\": \"Feature\",\n        \"name\": \"As a user, I can sum two numbers\",\n        \"tags\": [\"REQ_{{S1_KEY}}\"],\n        \"location\": \"features/sample_scenario_outline.feature:2\",\n        \"status\": \"failed\",\n        \"elements\": [{\n            \"type\": \"scenario\",\n            \"keyword\": \"Scenario Outline\",\n            \"name\": \" -- @1.1 \",\n            \"tags\": [\"TEST_{{T2_KEY}}\"],\n            \"location\": \"features/sample_scenario_outline.feature:13\",\n            \"steps\": [{\n                \"keyword\": \"Given\",\n                \"step_type\": \"given\",\n                \"name\": \"I have entered 20 into the calculator\",\n                \"location\": \"features/sample_scenario_outline.feature:6\",\n                \"result\": {\n                    \"status\": \"undefined\",\n                    \"duration\": 0\n                }\n            }, {\n                \"keyword\": \"And\",\n                \"step_type\": \"given\",\n                \"name\": \"I have entered 30 into the calculator\",\n                \"location\": \"features/sample_scenario_outline.feature:7\"\n            }, {\n                \"keyword\": \"When\",\n                \"step_type\": \"when\",\n                \"name\": \"I press add\",\n                \"location\": \"features/sample_scenario_outline.feature:8\"\n            }, {\n                \"keyword\": \"Then\",\n                \"step_type\": \"then\",\n                \"name\": \"the result should be 50 on the screen\",\n                \"location\": \"features/sample_scenario_outline.feature:9\"\n            }],\n            \"status\": \"failed\"\n        }, {\n            \"type\": \"scenario\",\n            \"keyword\": \"Scenario Outline\",\n            \"name\": \" -- @1.2 \",\n            \"tags\": [\"TEST_{{T2_KEY}}\"],\n            \"location\": \"features/sample_scenario_outline.feature:14\",\n            \"steps\": [{\n                \"keyword\": \"Given\",\n                \"step_type\": \"given\",\n                \"name\": \"I have entered 2 into the calculator\",\n                \"location\": \"features/sample_scenario_outline.feature:6\",\n                \"result\": {\n                    \"status\": \"undefined\",\n                    \"duration\": 0\n                }\n            }, {\n                \"keyword\": \"And\",\n                \"step_type\": \"given\",\n                \"name\": \"I have entered 5 into the calculator\",\n                \"location\": \"features/sample_scenario_outline.feature:7\"\n            }, {\n                \"keyword\": \"When\",\n                \"step_type\": \"when\",\n                \"name\": \"I press add\",\n                \"location\": \"features/sample_scenario_outline.feature:8\"\n            }, {\n                \"keyword\": \"Then\",\n                \"step_type\": \"then\",\n                \"name\": \"the result should be 7 on the screen\",\n                \"location\": \"features/sample_scenario_outline.feature:9\"\n            }],\n            \"status\": \"failed\"\n        }, {\n            \"type\": \"scenario\",\n            \"keyword\": \"Scenario Outline\",\n            \"name\": \" -- @1.3 \",\n            \"tags\": [\"TEST_{{T2_KEY}}\"],\n            \"location\": \"features/sample_scenario_outline.feature:15\",\n            \"steps\": [{\n                \"keyword\": \"Given\",\n                \"step_type\": \"given\",\n                \"name\": \"I have entered 0 into the calculator\",\n                \"location\": \"features/sample_scenario_outline.feature:6\",\n                \"result\": {\n                    \"status\": \"undefined\",\n                    \"duration\": 0\n                }\n            }, {\n                \"keyword\": \"And\",\n                \"step_type\": \"given\",\n                \"name\": \"I have entered 40 into the calculator\",\n                \"location\": \"features/sample_scenario_outline.feature:7\"\n            }, {\n                \"keyword\": \"When\",\n                \"step_type\": \"when\",\n                \"name\": \"I press add\",\n                \"location\": \"features/sample_scenario_outline.feature:8\"\n            }, {\n                \"keyword\": \"Then\",\n                \"step_type\": \"then\",\n                \"name\": \"the result should be 40 on the screen\",\n                \"location\": \"features/sample_scenario_outline.feature:9\"\n            }],\n            \"status\": \"failed\"\n        }, {\n            \"type\": \"scenario\",\n            \"keyword\": \"Scenario Outline\",\n            \"name\": \" -- @1.4 \",\n            \"tags\": [\"TEST_{{T2_KEY}}\"],\n            \"location\": \"features/sample_scenario_outline.feature:16\",\n            \"steps\": [{\n                \"keyword\": \"Given\",\n                \"step_type\": \"given\",\n                \"name\": \"I have entered 4 into the calculator\",\n                \"location\": \"features/sample_scenario_outline.feature:6\",\n                \"result\": {\n                    \"status\": \"undefined\",\n                    \"duration\": 0\n                }\n            }, {\n                \"keyword\": \"And\",\n                \"step_type\": \"given\",\n                \"name\": \"I have entered 50 into the calculator\",\n                \"location\": \"features/sample_scenario_outline.feature:7\"\n            }, {\n                \"keyword\": \"When\",\n                \"step_type\": \"when\",\n                \"name\": \"I press add\",\n                \"location\": \"features/sample_scenario_outline.feature:8\"\n            }, {\n                \"keyword\": \"Then\",\n                \"step_type\": \"then\",\n                \"name\": \"the result should be 54 on the screen\",\n                \"location\": \"features/sample_scenario_outline.feature:9\"\n            }],\n            \"status\": \"failed\"\n        }, {\n            \"type\": \"scenario\",\n            \"keyword\": \"Scenario Outline\",\n            \"name\": \" -- @1.5 \",\n            \"tags\": [\"TEST_{{T2_KEY}}\"],\n            \"location\": \"features/sample_scenario_outline.feature:17\",\n            \"steps\": [{\n                \"keyword\": \"Given\",\n                \"step_type\": \"given\",\n                \"name\": \"I have entered 5 into the calculator\",\n                \"location\": \"features/sample_scenario_outline.feature:6\",\n                \"result\": {\n                    \"status\": \"undefined\",\n                    \"duration\": 0\n                }\n            }, {\n                \"keyword\": \"And\",\n                \"step_type\": \"given\",\n                \"name\": \"I have entered 50 into the calculator\",\n                \"location\": \"features/sample_scenario_outline.feature:7\"\n            }, {\n                \"keyword\": \"When\",\n                \"step_type\": \"when\",\n                \"name\": \"I press add\",\n                \"location\": \"features/sample_scenario_outline.feature:8\"\n            }, {\n                \"keyword\": \"Then\",\n                \"step_type\": \"then\",\n                \"name\": \"the result should be 55 on the screen\",\n                \"location\": \"features/sample_scenario_outline.feature:9\"\n            }],\n            \"status\": \"failed\"\n        }]\n    }\n]\n    ",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/import/execution/behave?projectKey={{PROJECT_KEY}}",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"import",
												"execution",
												"behave"
											],
											"query": [
												{
													"key": "projectKey",
													"value": "{{PROJECT_KEY}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "JUnit",
							"item": [
								{
									"name": "JUnit - standard",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0e22c361-5735-4cf1-ab71-b07f017e8577",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Test Execution created\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.testExecIssue.key).to.not.be.empty;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/XpandSTF/Sourcetree/xray-postman-collections/junit_sample.xml"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/import/execution/junit?projectKey={{PROJECT_KEY}}",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"import",
												"execution",
												"junit"
											],
											"query": [
												{
													"key": "projectKey",
													"value": "{{PROJECT_KEY}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "TestNG",
							"item": [
								{
									"name": "TestNG - standard",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a0faae95-3a64-4bcd-b1ce-048923cfd5d4",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Test Execution created\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.testExecIssue.key).to.not.be.empty;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/XpandSTF/Sourcetree/xray-postman-collections/testng_sample.xml"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/import/execution/testng?projectKey={{PROJECT_KEY}}",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"import",
												"execution",
												"testng"
											],
											"query": [
												{
													"key": "projectKey",
													"value": "{{PROJECT_KEY}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "NUnit",
							"item": [
								{
									"name": "NUnit - standard",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7ca35be3-f136-4e29-88fc-cce70f611589",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Test Execution created\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.testExecIssue.key).to.not.be.empty;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/XpandSTF/Sourcetree/xray-postman-collections/nunit_sample.xml"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/import/execution/nunit?projectKey={{PROJECT_KEY}}",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"import",
												"execution",
												"nunit"
											],
											"query": [
												{
													"key": "projectKey",
													"value": "{{PROJECT_KEY}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Robot Framework",
							"item": [
								{
									"name": "Robot Framework - standard",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "51390da9-ddfe-4df9-a490-b62c33e7cefd",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Test Execution created\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.testExecIssue.key).to.not.be.empty;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/XpandSTF/Sourcetree/xray-postman-collections/robot_sample.xml"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/import/execution/robot?projectKey={{PROJECT_KEY}}",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"import",
												"execution",
												"robot"
											],
											"query": [
												{
													"key": "projectKey",
													"value": "{{PROJECT_KEY}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "multiple Cucumber",
							"item": [],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "export",
					"item": [
						{
							"name": "export test runs by Test Execution",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b9682c2a-1e36-4455-b4d9-2fc911aeddcf",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"returns 3 test runs\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.lengthOf(3);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/testruns?testExecKey={{TE1_KEY}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"testruns"
									],
									"query": [
										{
											"key": "testExecKey",
											"value": "{{TE1_KEY}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2ecf8588-318f-4d9a-92c1-940511567a1c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "cd141ca5-2add-4295-bed9-0b4f413ea8ae",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "cucumber",
			"item": [
				{
					"name": "import cucumber tests (scenarios/scenario outlines and backgrounds)",
					"item": [
						{
							"name": "import cucumber tests and background from a .feature",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b0e2bd95-8579-47ca-af5b-8b0fbc9f3713",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Test Execution created with 3 runs\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.testExecIssue.key).to.not.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"info\" : {\n        \"summary\" : \"Execution of automated tests for release\",\n        \"description\" : \"This execution is automatically created when importing execution results from an external source\",\n        \"startDate\" : \"2020-05-30T11:37:00+01:00\",\n        \"finishDate\" : \"2020-05-30T11:50:00+01:00\"\n    },\n    \"tests\" : [\n        {\n            \"testKey\" : \"{{T1_KEY}}\",\n            \"start\" : \"2020-05-30T11:47:35+01:00\",\n            \"finish\" : \"2020-05-30T11:49:35+01:00\",\n            \"comment\" : \"Successful execution1\",\n            \"status\" : \"PASS\"\n        },\n        {\n            \"testKey\" : \"{{T2_KEY}}\",\n            \"start\" : \"2020-05-30T11:37:35+01:00\",\n            \"finish\" : \"2020-05-30T11:39:35+01:00\",\n            \"comment\" : \"Successful execution2\",\n            \"status\" : \"PASS\"\n        },\n        {\n            \"testKey\" : \"{{T3_KEY}}\",\n            \"start\" : \"2020-05-30T11:44:35+01:00\",\n            \"finish\" : \"2020-05-30T11:45:35+01:00\",\n            \"comment\" : \"Successful execution3\",\n            \"status\" : \"PASS\"\n        }\n ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/import/execution",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"import",
										"execution"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "export cucumber tests",
					"item": [
						{
							"name": "export cucumber tests, as .feature",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0cdb4321-4548-44fb-8b79-803fe4cdc8b4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"return a .feature file\", function () {",
											"    var response = pm.response;",
											"    pm.expect(response).to.not.be.empty;",
											"    pm.expect(response.text()).to.include(\"Scenario Outline: Sum of two numbers\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/export/test?keys={{T2_KEY}}&fz=false",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"export",
										"test"
									],
									"query": [
										{
											"key": "keys",
											"value": "{{T2_KEY}}"
										},
										{
											"key": "fz",
											"value": "false"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "settings",
			"item": [
				{
					"name": "get possible test statuses from configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8cbaa82f-2290-405c-893f-af0403803d9c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"several statuses returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf.at.least(5);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/settings/teststatuses",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"settings",
								"teststatuses"
							]
						}
					},
					"response": []
				},
				{
					"name": "get possible test step statuses from configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "351cdf7d-3b45-4b76-8b94-448b2311c588",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"several statuses returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf.at.least(4);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/settings/teststepstatuses",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"settings",
								"teststepstatuses"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{JIRA_PASSWORD}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{JIRA_USERNAME}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "83f5992c-a320-41bb-8264-8f05aadf56c9",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d1f9c535-2979-4ffb-b8ca-b135d6cf0f90",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "87cbb713-ce36-4338-a8d9-5c241b0523c9",
			"key": "TEST_ISSUETYPE_NAME",
			"value": "Test"
		},
		{
			"id": "922b35eb-1503-497f-8de4-90d219dd471c",
			"key": "PRECONDITION_ISSUETYPE_NAME",
			"value": "Pre-Condition"
		},
		{
			"id": "88cd72c4-d962-4eb4-b4ff-028c08e717dc",
			"key": "TESTSET_ISSUETYPE_NAME",
			"value": "Test Set"
		},
		{
			"id": "22bdd40e-16de-4efc-9df9-6153a1b137b1",
			"key": "TESTEXECUTION_ISSUETYPE_NAME",
			"value": "Test Execution"
		},
		{
			"id": "684b05e4-cff1-4a95-879e-7f723eef6b6e",
			"key": "TESTPLAN_ISSUETYPE_NAME",
			"value": "Test Plan"
		},
		{
			"id": "3ed9c45b-9e8c-4f1e-a0c3-531ff034834f",
			"key": "CF_Test_Type",
			"value": "customfield_10100"
		},
		{
			"id": "49328703-b270-4923-ba47-c9fd858f4f55",
			"key": "CF_Precondition_Type",
			"value": "customfield_10121"
		},
		{
			"id": "f90bc3e3-2e33-4c14-8214-60918201a6ac",
			"key": "CF_Cucumber_Scenario",
			"value": "customfield_10102"
		},
		{
			"id": "d4168ba9-eb80-4936-8a1a-1955ab9402c4",
			"key": "CF_Cucumber_Test_Type",
			"value": "customfield_10101"
		},
		{
			"id": "c4e359ad-793d-49d5-a8e9-012d88db9008",
			"key": "CF_Manual_Test_Steps",
			"value": "customfield_10104"
		},
		{
			"id": "bc32323d-f48c-48e2-b9d0-1461ec15d9a8",
			"key": "CF_Generic_Definition",
			"value": "customfield_10103"
		},
		{
			"id": "0a15fc77-18a1-42d8-82f3-e369508e37e5",
			"key": "PROJECT_KEY",
			"value": "CALC"
		},
		{
			"id": "c9da8b96-ca33-4317-95d0-323b55107b43",
			"key": "CF_Test_Environments",
			"value": "customfield_10125"
		},
		{
			"id": "fc69871f-c764-400f-bcad-165eb222fea0",
			"key": "BUG_ISSUETYPE_NAME",
			"value": "Bug"
		},
		{
			"id": "ea0dc736-4305-4e07-8a69-4573563ca520",
			"key": "STORY_ISSUETYPE_NAME",
			"value": "Story"
		},
		{
			"id": "e37f0803-8dc1-4905-b1d9-db4407f8439d",
			"key": "CF_Test_Repository_Path",
			"value": "customfield_10111"
		},
		{
			"id": "02a70bdc-0305-47c6-8315-2cf5b013d3da",
			"key": "XRAY_VERSION_MAJOR",
			"value": "3"
		},
		{
			"id": "3d5cdb8f-0dfc-47cc-8fc8-326d7a98a767",
			"key": "PROJECT_ID",
			"value": "10000"
		},
		{
			"id": "898cf44a-d470-4416-9770-2f97217271a5",
			"key": "S1_KEY",
			"value": "CALC-2049"
		},
		{
			"id": "3b180bab-7e46-468a-b7e1-8ce1299410ac",
			"key": "D1_KEY",
			"value": "CALC-2050"
		},
		{
			"id": "aac3e48f-6807-4be3-b4ef-ace760ff6ecc",
			"key": "F1_ID",
			"value": 22
		},
		{
			"id": "a8847dd3-a4d5-4ba5-8bf1-ff26e6ab9d6b",
			"key": "F1_NAME",
			"value": "Postman F1 (3)"
		},
		{
			"id": "c13cdd79-154c-480a-bebe-3c2f4480c17d",
			"key": "F1_PATH",
			"value": "/Postman F1 (3)"
		},
		{
			"id": "9c99a790-1b6c-4650-9e1e-1714c0f9af6f",
			"key": "F2_ID",
			"value": 23
		},
		{
			"id": "4240b4a6-988b-463b-ac6a-194b616734c1",
			"key": "F2_NAME",
			"value": "Postman F2 (3)"
		},
		{
			"id": "1e00f4a6-f41f-4c61-a52f-29fa50a01048",
			"key": "F2_PATH",
			"value": "/Postman F2 (3)"
		},
		{
			"id": "a2e98f97-2b9e-4844-bff3-77839c614fdc",
			"key": "T2_KEY",
			"value": "CALC-2053"
		},
		{
			"id": "9b1324ef-a64d-4de1-b537-7433c0d39e1d",
			"key": "T3_KEY",
			"value": "CALC-2054"
		},
		{
			"id": "79f687c2-649a-4bd8-829e-d0298ffc6d7c",
			"key": "P1_KEY",
			"value": "CALC-2055"
		},
		{
			"id": "e670ace0-7ccf-46a8-9cf6-92bb5b2d0cb4",
			"key": "TS1_KEY",
			"value": "CALC-2056"
		},
		{
			"id": "158a6d15-f1d5-48db-8b8c-61e8d48bc72d",
			"key": "TP1_KEY",
			"value": "CALC-2057"
		},
		{
			"id": "bc665061-068a-4b83-a247-d0064884d936",
			"key": "TE1_KEY",
			"value": "CALC-2058"
		},
		{
			"id": "83b3f5df-7c4b-4862-b31a-d29e056b2d5d",
			"key": "T1_STEP1_ID",
			"value": 1863
		},
		{
			"id": "74579251-96a3-4f9b-a4c9-33ab8d54dde1",
			"key": "TR2_ID",
			"value": 4300
		},
		{
			"id": "eb63f4ef-8453-4839-98de-97ee5fca6cef",
			"key": "T1_NEWSTEP_ATTACH1_ID",
			"value": 920
		},
		{
			"id": "2563ffe3-4e12-4b26-9f8b-70d32fe72f5e",
			"key": "T1_NEWSTEP_ID",
			"value": 1871
		},
		{
			"id": "7da284c5-0c81-4882-92e8-8f24dc9758d5",
			"key": "TR3_ID",
			"value": 4301
		},
		{
			"id": "03b58a07-094c-4856-955b-e1fe7d3c1f18",
			"key": "F3_ID",
			"value": 24
		},
		{
			"id": "dabf1484-7ccf-4db9-bae9-24d74c890f1f",
			"key": "F3_NAME",
			"value": "Postman 3"
		},
		{
			"id": "8a7842e8-17f4-4ee8-8f27-4f7694a466a2",
			"key": "F3_PATH",
			"value": "/Postman 3"
		},
		{
			"id": "019c7af0-0e91-429c-8eb9-c9bc7318fe25",
			"key": "T1_KEY",
			"value": "CALC-2051"
		},
		{
			"id": "05444f53-ee64-4409-84c1-2dfc659b821b",
			"key": "T4_KEY",
			"value": "CALC-2052"
		},
		{
			"id": "8e0b0416-ee4b-4548-be06-049e50b93727",
			"key": "TR1_ID",
			"value": 4299
		},
		{
			"id": "0646a06c-39c6-4484-bc82-6091ee7ac315",
			"key": "TR1_ATTACH1_ID",
			"value": 919
		},
		{
			"id": "03e29f9e-b5af-47da-86ee-1d571dfd50f1",
			"key": "TR1_ATTACH1_NAME",
			"value": "dummy.txt"
		},
		{
			"id": "6024ac5d-bf1e-477b-bbee-f2420618a288",
			"key": "TR1_STEP1_ID",
			"value": 3309
		},
		{
			"id": "8e063424-3437-469b-88de-f84eb4349144",
			"key": "TR1_STEP1_ATTACH1_ID",
			"value": 918
		},
		{
			"id": "c8773de2-1530-4a6e-a91a-543238f8676c",
			"key": "TR1_STEP1_ATTACH1_NAME",
			"value": "dummy.txt"
		}
	],
	"protocolProfileBehavior": {}
}